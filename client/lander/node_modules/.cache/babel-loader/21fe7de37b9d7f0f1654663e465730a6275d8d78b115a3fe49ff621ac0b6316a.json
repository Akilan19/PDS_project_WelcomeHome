{"ast":null,"code":"var _jsxFileName = \"/Users/akilan/Downloads/welcomeHome-master/client/lander/src/RankSystem.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction doit() {\n  try {\n    const response = axios.post(\"http://127.0.0.1:5000/api/logout/\");\n    console.log(response.data);\n    alert(\"Logged out successfully!\");\n  } catch (error) {\n    // console.log(formData);\n    console.error(error.response ? error.response.data : error.message);\n    alert(\"Error!\");\n  }\n}\nconst RankSystem = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    start_date: \"\",\n    end_date: \"\"\n  });\n  const [rank, setRank] = useState([]);\n  const [error, setError] = useState(\"\");\n\n  // Function to format the date to 'dd-MM-yyyy'\n  const formatDate = date => {\n    const d = new Date(date);\n    const day = String(d.getDate()).padStart(2, \"0\");\n    const month = String(d.getMonth() + 1).padStart(2, \"0\"); // Months are zero-based\n    const year = d.getFullYear();\n    return `${day}-${month}-${year}`;\n  };\n\n  // Fetch rankings based on the date range\n  const fetchRank = async e => {\n    e.preventDefault(); // Prevent the form from reloading the page\n    setError(\"\"); // Clear previous error messages\n    setRank([]); // Clear previous rankings\n\n    try {\n      // Format dates to 'dd-MM-yyyy'\n      const formattedData = {\n        start_date: formatDate(formData.start_date),\n        end_date: formatDate(formData.end_date)\n      };\n\n      // Send GET request with query parameters\n      const response = await axios.get(\"http://127.0.0.1:5000/api/volunteer-scoreboard\", {\n        params: formattedData\n      });\n\n      // Update state with rankings\n      setRank(response.data.scoreboard);\n    } catch (err) {\n      console.log(rank);\n      if (err.response) {\n        setError(err.response.data.message); // Show error returned from API\n      } else {\n        setError(\"An error occurred while fetching data.\");\n      }\n    }\n  };\n\n  // Handle input changes for the form fields\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: fetchRank,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Volunteer Rankings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Start Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"start_date\",\n          value: formData.start_date,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"End Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"end_date\",\n          value: formData.end_date,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Find Rankings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 23\n    }, this), rank.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Rankings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: rank.map((volunteer, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [index + 1, \". \", volunteer.volunteer, \" - \", volunteer.num_tasks, \" tasks\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }, this) : rank.length === 0 && !error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No rankings available for the selected date range.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: doit,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s(RankSystem, \"p2+BgM5Y+ZlgwAMdqgUqVq77liI=\");\n_c = RankSystem;\nexport default RankSystem;\nvar _c;\n$RefreshReg$(_c, \"RankSystem\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","doit","response","post","console","log","data","alert","error","message","RankSystem","_s","formData","setFormData","start_date","end_date","rank","setRank","setError","formatDate","date","d","Date","day","String","getDate","padStart","month","getMonth","year","getFullYear","fetchRank","e","preventDefault","formattedData","get","params","scoreboard","err","handleInputChange","name","value","target","prevState","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","required","length","map","volunteer","index","num_tasks","onClick","_c","$RefreshReg$"],"sources":["/Users/akilan/Downloads/welcomeHome-master/client/lander/src/RankSystem.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction doit() \r\n{\r\n    try {\r\n        const response = axios.post(\"http://127.0.0.1:5000/api/logout/\");\r\n        console.log(response.data);\r\n        alert(\"Logged out successfully!\");\r\n    } catch (error) {\r\n        // console.log(formData);\r\n        console.error(error.response ? error.response.data : error.message);\r\n        alert(\"Error!\");\r\n    }    \r\n}\r\n\r\nconst RankSystem = () => {\r\n    const [formData, setFormData] = useState({\r\n        start_date: \"\",\r\n        end_date: \"\",\r\n    });\r\n    const [rank, setRank] = useState([]);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    // Function to format the date to 'dd-MM-yyyy'\r\n    const formatDate = (date) => {\r\n        const d = new Date(date);\r\n        const day = String(d.getDate()).padStart(2, \"0\");\r\n        const month = String(d.getMonth() + 1).padStart(2, \"0\"); // Months are zero-based\r\n        const year = d.getFullYear();\r\n        return `${day}-${month}-${year}`;\r\n    };\r\n\r\n    // Fetch rankings based on the date range\r\n    const fetchRank = async (e) => {\r\n        e.preventDefault(); // Prevent the form from reloading the page\r\n        setError(\"\"); // Clear previous error messages\r\n        setRank([]); // Clear previous rankings\r\n\r\n        try {\r\n            // Format dates to 'dd-MM-yyyy'\r\n            const formattedData = {\r\n                start_date: formatDate(formData.start_date),\r\n                end_date: formatDate(formData.end_date),\r\n            };\r\n\r\n            // Send GET request with query parameters\r\n            const response = await axios.get(\"http://127.0.0.1:5000/api/volunteer-scoreboard\", {\r\n                params: formattedData,\r\n            });\r\n\r\n            // Update state with rankings\r\n            setRank(response.data.scoreboard);\r\n        } catch (err) {\r\n            console.log(rank);\r\n            if (err.response) {\r\n                setError(err.response.data.message); // Show error returned from API\r\n            } else {\r\n                setError(\"An error occurred while fetching data.\");\r\n            }\r\n        }\r\n    };\r\n\r\n    // Handle input changes for the form fields\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData((prevState) => ({\r\n            ...prevState,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={fetchRank}>\r\n                <h2>Volunteer Rankings</h2>\r\n                <label>\r\n                    Start Date:\r\n                    <input\r\n                        type=\"date\"\r\n                        name=\"start_date\"\r\n                        value={formData.start_date}\r\n                        onChange={handleInputChange}\r\n                        required\r\n                    />\r\n                </label>\r\n                <label>\r\n                    End Date:\r\n                    <input\r\n                        type=\"date\"\r\n                        name=\"end_date\"\r\n                        value={formData.end_date}\r\n                        onChange={handleInputChange}\r\n                        required\r\n                    />\r\n                </label>\r\n                <button type=\"submit\">Find Rankings</button>\r\n            </form>\r\n\r\n            {error && <p>{error}</p>}\r\n\r\n            {rank.length > 0 ? (\r\n                <div>\r\n                    <h3>Rankings</h3>\r\n                    <ul>\r\n                        {rank.map((volunteer, index) => (\r\n                            <li key={index}>\r\n                                {index + 1}. {volunteer.volunteer} - {volunteer.num_tasks} tasks\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            ) : (\r\n                rank.length === 0 && !error && (\r\n                    <p>No rankings available for the selected date range.</p>\r\n                )\r\n            )}\r\n            <button onClick={doit}>Logout</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RankSystem;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}