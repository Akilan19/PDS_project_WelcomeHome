{"ast":null,"code":"var _jsxFileName = \"/Users/akilan/Downloads/welcomeHome-master/client/lander/src/UpdateOrderStatus.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction doit() {\n  _s();\n  const navigate = useNavigate();\n  try {\n    const response = axios.post(\"http://127.0.0.1:5000/api/logout/\");\n    console.log(response.data);\n    navigate('/Login');\n    alert(\"Logged out successfully!\");\n  } catch (error) {\n    // console.log(formData);\n    console.error(error.response ? error.response.data : error.message);\n    alert(\"Error!\");\n  }\n}\n_s(doit, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", true);\nconst UpdateOrderStatus = () => {\n  _s2();\n  const [formData, setFormData] = useState({\n    OrderID: \"\",\n    status: \"\",\n    date: \"\"\n  });\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const handleUpdateStatus = async e => {\n    e.preventDefault(); // Prevent the form from reloading the page\n    setError(\"\"); // Clear previous error messages\n    setMessage(\"\"); // Clear previous success messages\n\n    const formatDate = date => {\n      const d = new Date(date);\n      const day = String(d.getDate()).padStart(2, \"0\");\n      const month = String(d.getMonth() + 1).padStart(2, \"0\"); // Months are zero-based\n      const year = d.getFullYear();\n      return `${day}-${month}-${year}`;\n    };\n    try {\n      const formattedData = {\n        OrderID: formData.OrderID,\n        status: formData.status,\n        date: formatDate(formData.date) // Use correct date formatting\n      };\n      const response = await axios.post(\"http://127.0.0.1:5000/api/order/status\", formattedData);\n      setMessage(response.data.message); // Set success message from backend\n    } catch (err) {\n      console.log(message);\n      if (err.response) {\n        setError(err.response.data.message); // Show error returned from API\n      } else {\n        setError(\"An error occurred while updating the order status.\");\n      }\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Update Order Status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpdateStatus,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Order ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"OrderID\",\n          value: formData.OrderID,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Status:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"status\",\n          value: formData.status,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"date\",\n          value: formData.date,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Order Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: doit,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n_s2(UpdateOrderStatus, \"POYfy3fDna9OH/7qenw+j7wgJJo=\");\n_c = UpdateOrderStatus;\nexport default UpdateOrderStatus;\nvar _c;\n$RefreshReg$(_c, \"UpdateOrderStatus\");","map":{"version":3,"names":["React","useState","axios","Navigate","jsxDEV","_jsxDEV","doit","_s","navigate","useNavigate","response","post","console","log","data","alert","error","message","UpdateOrderStatus","_s2","formData","setFormData","OrderID","status","date","setMessage","setError","handleUpdateStatus","e","preventDefault","formatDate","d","Date","day","String","getDate","padStart","month","getMonth","year","getFullYear","formattedData","err","handleInputChange","name","value","target","prevState","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","onClick","_c","$RefreshReg$"],"sources":["/Users/akilan/Downloads/welcomeHome-master/client/lander/src/UpdateOrderStatus.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nfunction doit() \r\n{\r\n    const navigate = useNavigate();\r\n    try {\r\n        const response = axios.post(\"http://127.0.0.1:5000/api/logout/\");\r\n        console.log(response.data);\r\n        navigate('/Login');\r\n        alert(\"Logged out successfully!\");\r\n    } catch (error) {\r\n        // console.log(formData);\r\n        console.error(error.response ? error.response.data : error.message);\r\n        alert(\"Error!\");\r\n    }    \r\n}\r\n\r\nconst UpdateOrderStatus = () => {\r\n    const [formData, setFormData] = useState({\r\n        OrderID: \"\",\r\n        status: \"\",\r\n        date: \"\",\r\n    });\r\n    const [message, setMessage] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const handleUpdateStatus = async (e) => {\r\n        e.preventDefault(); // Prevent the form from reloading the page\r\n        setError(\"\"); // Clear previous error messages\r\n        setMessage(\"\"); // Clear previous success messages\r\n\r\n        const formatDate = (date) => {\r\n            const d = new Date(date);\r\n            const day = String(d.getDate()).padStart(2, \"0\");\r\n            const month = String(d.getMonth() + 1).padStart(2, \"0\"); // Months are zero-based\r\n            const year = d.getFullYear();\r\n            return `${day}-${month}-${year}`;\r\n        };\r\n\r\n        try {\r\n            const formattedData = {\r\n                OrderID: formData.OrderID,\r\n                status: formData.status,\r\n                date: formatDate(formData.date), // Use correct date formatting\r\n            };\r\n\r\n            const response = await axios.post(\"http://127.0.0.1:5000/api/order/status\", formattedData);\r\n            setMessage(response.data.message); // Set success message from backend\r\n        } catch (err) {\r\n            console.log(message);\r\n            if (err.response) {\r\n                setError(err.response.data.message); // Show error returned from API\r\n            } else {\r\n                setError(\"An error occurred while updating the order status.\");\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData((prevState) => ({\r\n            ...prevState,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Update Order Status</h1>\r\n            <form onSubmit={handleUpdateStatus}>\r\n                <label>\r\n                    Order ID:\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"OrderID\"\r\n                        value={formData.OrderID}\r\n                        onChange={handleInputChange}\r\n                        required\r\n                    />\r\n                </label>\r\n                <label>\r\n                    Status:\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"status\"\r\n                        value={formData.status}\r\n                        onChange={handleInputChange}\r\n                        required\r\n                    />\r\n                </label>\r\n                <label>\r\n                    Date:\r\n                    <input\r\n                        type=\"date\"\r\n                        name=\"date\"\r\n                        value={formData.date}\r\n                        onChange={handleInputChange}\r\n                        required\r\n                    />\r\n                </label>\r\n                <button type=\"submit\">Update Order Status</button>\r\n            </form>\r\n            {message && <p>{message}</p>}\r\n            {error && <p>{error}</p>}\r\n            <button onClick={doit}>Logout</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UpdateOrderStatus;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}